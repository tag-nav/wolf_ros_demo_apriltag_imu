stages:
  - demo

############ YAML ANCHORS ############
.preliminaries_template: &preliminaries_definition
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  ## Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh  
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  # - echo "$SSH_KNOWN_HOSTS" > $HOME/.ssh/known_hosts
  - ssh-keyscan -H -p 2202 gitlab.iri.upc.edu >> $HOME/.ssh/known_hosts

  # update apt
  - apt-get update

  # create ci_deps folder (if not exists)
  - mkdir -pv ci_deps

  # manually source ros setup.bash
  - source /root/catkin_ws/devel/setup.bash
  - roscd # check that it works

.install_wolf_template: &install_wolf_definition
  - cd ${CI_PROJECT_DIR}/ci_deps
  - if [ -d wolf ]; then
  -   echo "directory wolf exists"
  -   cd wolf
  -   git checkout devel
  -   git pull
  -   git checkout $WOLF_CORE_BRANCH
  - else
  -   git clone ssh://git@gitlab.iri.upc.edu:2202/mobile_robotics/wolf_projects/wolf_lib/wolf.git
  -   cd wolf
  -   git checkout $WOLF_CORE_BRANCH
  - fi
  - mkdir -pv build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=release -DBUILD_DEMOS=OFF -DBUILD_TESTS=OFF ..
  - make -j$(nproc)
  - make install
  - ldconfig

.install_visionutils_template: &install_visionutils_definition
  - cd ${CI_PROJECT_DIR}/ci_deps
  - if [ -d vision_utils ]; then
  -   echo "directory vision_utils exists"
  -   cd vision_utils
  -   git pull
  - else
  -   git clone https://gitlab.iri.upc.edu/labrobotica/algorithms/vision_utils.git
  -   cd vision_utils
  - fi
  - mkdir -pv build
  - cd build
  - rm -rf *
  - cmake -DCMAKE_BUILD_TYPE=release ..
  - make -j$(nproc)
  - make install
  - ldconfig

.install_wolfvision_template: &install_wolfvision_definition
  - cd ${CI_PROJECT_DIR}/ci_deps
  - if [ -d vision ]; then
  -   echo "directory vision exists"
  -   cd vision
  -   git checkout devel
  -   git pull
  -   git checkout $WOLF_VISION_BRANCH
  - else
  -   git clone ssh://git@gitlab.iri.upc.edu:2202/mobile_robotics/wolf_projects/wolf_lib/plugins/vision.git
  -   cd vision
  -   git checkout $WOLF_VISION_BRANCH
  - fi
  - mkdir -pv build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=release -DBUILD_TESTS=OFF ..
  - make -j$(nproc)
  - make install
  - ldconfig

.install_apriltag_template: &install_apriltag_definition
  - cd ${CI_PROJECT_DIR}/ci_deps
  - if [ -d apriltaglib ]; then
  -   echo "directory apriltaglib exists"
  -   cd apriltaglib
  -   git pull
  - else
  -   git clone https://github.com/AprilRobotics/apriltag apriltaglib
  -   cd apriltaglib
  - fi
  - mkdir -pv build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=release ..
  - make -j$(nproc)
  - make install
  - ldconfig

.install_wolfapriltag_template: &install_wolfapriltag_definition
  - cd ${CI_PROJECT_DIR}/ci_deps
  - if [ -d apriltag ]; then
  -   echo "directory apriltag exists"
  -   cd apriltag
  -   git checkout devel
  -   git pull
  -   git checkout $WOLF_APRILTAG_BRANCH
  - else
  -   git clone ssh://git@gitlab.iri.upc.edu:2202/mobile_robotics/wolf_projects/wolf_lib/plugins/apriltag.git
  -   cd apriltag
  -   git checkout $WOLF_APRILTAG_BRANCH
  - fi
  - mkdir -pv build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=release -DBUILD_TESTS=OFF ..
  - make -j$(nproc)
  - make install
  - ldconfig

.install_wolfimu_template: &install_wolfimu_definition
  - cd ${CI_PROJECT_DIR}/ci_deps
  - if [ -d imu ]; then
  -   echo "directory imu exists"
  -   cd imu
  -   git checkout devel
  -   git pull
  -   git checkout $WOLF_IMU_BRANCH
  - else
  -   git clone ssh://git@gitlab.iri.upc.edu:2202/mobile_robotics/wolf_projects/wolf_lib/plugins/imu.git
  -   cd imu
  -   git checkout $WOLF_IMU_BRANCH
  - fi
  - mkdir -pv build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=release -DBUILD_TESTS=OFF ..
  - make -j$(nproc)
  - make install
  - ldconfig

.clone_wolfrosnode_template: &clone_wolfrosnode_definition
  - roscd
  - cd ../src
  - git clone ssh://git@gitlab.iri.upc.edu:2202/mobile_robotics/wolf_projects/wolf_ros/wolf_ros_node.git
  - cd wolf_ros_node
  - git checkout $WOLF_ROS_CORE_BRANCH

.clone_wolfrosapriltag_template: &clone_wolfrosapriltag_definition
  - roscd
  - cd ../src
  - git clone ssh://git@gitlab.iri.upc.edu:2202/mobile_robotics/wolf_projects/wolf_ros/wolf_ros_apriltag.git
  - cd wolf_ros_apriltag
  - git checkout $WOLF_ROS_APRILTAG_BRANCH

.demo_template: &demo_definition
  - roscd
  - cd ../src
  - git clone ssh://git@gitlab.iri.upc.edu:2202/${CI_PROJECT_PATH}.git
  - cd wolf_demo_apriltag_imu
  - git checkout $CI_COMMIT_BRANCH
  - cd ../..
  - catkin_make
  - roscd wolf_demo_apriltag_imu/bag
  - wget https://gitlab.iri.upc.edu/mobile_robotics/wolf_projects/wolf_ros/demos/demo_rosbags/-/raw/master/apriltag_imu/sim/circle_no_clock.bag
  - roslaunch wolf_demo_apriltag_imu demo_apriltag_imu.launch rviz:=false bag:=circle_no_clock

############ UBUNTU 16.04 TEST ############
demo:xenial:
  stage: demo
  image: labrobotica/wolf_vision_deps_ros:16.04
  cache:
    - key: wolf_and_deps-xenial
      paths:
      - ci_deps
  except:
    - master
  before_script:
    - *preliminaries_definition
    - *install_wolf_definition
    - *install_visionutils_definition
    - *install_wolfvision_definition
    - *install_apriltag_definition
    - *install_wolfapriltag_definition
    - *install_wolfimu_definition
    - *clone_wolfrosnode_definition
    - *clone_wolfrosapriltag_definition
  script:
    - *demo_definition

############ UBUNTU 18.04 TEST ############
demo:bionic:
  stage: demo
  image: labrobotica/wolf_vision_deps_ros:18.04
  cache:
    - key: wolf_and_deps-bionic
      paths:
      - ci_deps
  except:
    - master
  before_script:
    - *preliminaries_definition
    - *install_wolf_definition
    - *install_visionutils_definition
    - *install_wolfvision_definition
    - *install_apriltag_definition
    - *install_wolfapriltag_definition
    - *install_wolfimu_definition
    - *clone_wolfrosnode_definition
    - *clone_wolfrosapriltag_definition
  script:
    - *demo_definition

############ UBUNTU 20.04 TEST ############
demo:focal:
  stage: demo
  image: labrobotica/wolf_vision_deps_ros:20.04
  cache:
    - key: wolf_and_deps-focal
      paths:
      - ci_deps
  except:
    - master
  before_script:
    - *preliminaries_definition
    - *install_wolf_definition
    - *install_visionutils_definition
    - *install_wolfvision_definition
    - *install_apriltag_definition
    - *install_wolfapriltag_definition
    - *install_wolfimu_definition
    - *clone_wolfrosnode_definition
    - *clone_wolfrosapriltag_definition
  script:
    - *demo_definition
